{"version":3,"sources":["contexts/quoteContext.js","components/Header.js","components/QuoteContainer.js","components/QuoteButtons.js","components/QuoteCard.js","components/FetchError.js","components/Footer.js","components/Loader.js","data/colors.js","App.js","index.js"],"names":["quoteContext","React","createContext","QuoteProvider","Provider","QuoteConsumer","Consumer","Header","isLoading","quoteObj","generateQuote","className","onClick","QuoteContainer","color","randomColor","quote","author","quoteChanged","style","QuoteButtons","background","title","href","target","rel","size","QuoteCard","FetchError","errMsg","Footer","classname","Loader","colors","App","props","e","setState","quoteIdx","Math","ceil","random","setTimeout","state","quotes","getQuotes","bind","this","fetch","then","res","json","data","document","body","onkeyup","includes","code","catch","err","message","value","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.79568505.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst quoteContext = React.createContext();\r\n\r\nconst QuoteProvider = quoteContext.Provider;\r\nconst QuoteConsumer = quoteContext.Consumer;\r\n\r\nexport { QuoteProvider, QuoteConsumer };\r\n","import React from 'react';\r\nimport { ImShuffle } from 'react-icons/im';\r\nimport { QuoteConsumer } from '../contexts/quoteContext';\r\n\r\nfunction Header() {\r\n  return (\r\n    <QuoteConsumer>\r\n      {({ isLoading, quoteObj, generateQuote }) => (\r\n        <>\r\n          <h1 className=\"heading-primary\">Quote of the Day</h1>\r\n          {!isLoading && (\r\n            <h3 className=\"heading-tertiary\">\r\n              Find a quote that resonates with you and share it with the world!\r\n            </h3>\r\n          )}\r\n          {!isLoading && !quoteObj && (\r\n            <>\r\n              <button className=\"btn-cta\" onClick={generateQuote}>\r\n                <ImShuffle className=\"icon-svg\" />\r\n              </button>\r\n              <p className=\"instructional-text\">\r\n                Click the <span className=\"user-instruction\">\"SHUFFLE\"</span>\r\n                &nbsp;button to get your quote!\r\n              </p>\r\n              <p className=\"instructional-text desktop\">\r\n                ( or press the <span className=\"user-instruction\">\"ENTER\"</span>\r\n                &nbsp;or <span className=\"user-instruction\">\"SPACEBAR\"</span>\r\n                &nbsp;keys )\r\n              </p>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </QuoteConsumer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { FaQuoteLeft } from 'react-icons/fa';\r\nimport { QuoteConsumer } from '../contexts/quoteContext';\r\n\r\nfunction QuoteContainer() {\r\n  return (\r\n    <QuoteConsumer>\r\n      {({ randomColor: color, quoteObj: { quote, author }, quoteChanged }) => (\r\n        <div\r\n          className={quoteChanged ? 'quote-container fade' : 'quote-container'}\r\n          style={{ color }}\r\n        >\r\n          <p className=\"quote-text\">\r\n            <FaQuoteLeft className=\"icon-svg\" />\r\n            &nbsp;{quote}\r\n          </p>\r\n\r\n          <div className=\"quote-author\">\r\n            <span>- {author}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </QuoteConsumer>\r\n  );\r\n}\r\n\r\nexport default QuoteContainer;\r\n","import React from 'react';\r\nimport { QuoteConsumer } from '../contexts/quoteContext';\r\nimport { FaTwitter, FaFacebook, FaWhatsapp } from 'react-icons/fa';\r\nimport { ImShuffle } from 'react-icons/im';\r\n\r\nfunction QuoteButtons() {\r\n  return (\r\n    <QuoteConsumer>\r\n      {({ randomColor, quoteObj: { quote, author }, generateQuote }) => (\r\n        <div className=\"buttons-container\">\r\n          <div className=\"sm-buttons-container\">\r\n            <button\r\n              className=\"btn-socialMedia\"\r\n              style={{ background: randomColor }}\r\n            >\r\n              <a\r\n                className=\"link-socialMedia\"\r\n                title=\"Tweet this quote!\"\r\n                href={`https://twitter.com/intent/tweet?text=${quote} - ${author} %23QuoteOfTheDay`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FaTwitter className=\"icon-svg\" size=\"1.3em\" />\r\n              </a>\r\n            </button>\r\n            <button\r\n              className=\"btn-socialMedia\"\r\n              style={{ background: randomColor }}\r\n            >\r\n              <a\r\n                className=\"link-socialMedia\"\r\n                title=\"Share this quote on WhatsApp!\"\r\n                href={`whatsapp://send?text=${quote} - ${author} %23QuoteOfTheDay`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FaWhatsapp className=\"icon-svg\" size=\"1.3em\" />{' '}\r\n              </a>\r\n            </button>\r\n            <button\r\n              className=\"btn-socialMedia\"\r\n              style={{ background: randomColor }}\r\n            >\r\n              <a\r\n                className=\"link-socialMedia\"\r\n                title=\"Share this page on Facebook!\"\r\n                href=\"https://www.facebook.com/sharer/sharer.php?u=https://xandert93.github.io/drum-machine/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FaFacebook className=\"icon-svg\" size=\"1.3em\" />\r\n                {/*FB T&C's state that you cannot share any text until the user types it in FB fields*/}\r\n              </a>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"quote-button-container\">\r\n            <button\r\n              className=\"btn-shuffle\"\r\n              title=\"Shuffle\"\r\n              onClick={generateQuote}\r\n              style={{ background: randomColor }}\r\n            >\r\n              <ImShuffle className=\"icon-svg\" size=\"1.3em\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </QuoteConsumer>\r\n  );\r\n}\r\n\r\nexport default QuoteButtons;\r\n","import React from 'react';\r\nimport QuoteContainer from './QuoteContainer';\r\nimport QuoteButtons from './QuoteButtons';\r\n\r\nfunction QuoteCard() {\r\n  return (\r\n    <div className=\"quote-card\">\r\n      <QuoteContainer />\r\n      <QuoteButtons />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoteCard;\r\n","import React from 'react';\r\nimport { QuoteConsumer } from '../contexts/quoteContext';\r\n\r\nconst FetchError = () => (\r\n  <QuoteConsumer>\r\n    {({ errMsg }) => (\r\n      <h3 className=\"heading-tertiary\">Sorry, there was an error: {errMsg}</h3>\r\n    )}\r\n  </QuoteConsumer>\r\n);\r\n\r\nexport default FetchError;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\" title=\"Visit GitHub page\">\r\n      <a\r\n        classname=\"link-socialMedia\"\r\n        href=\"https://github.com/xandert93\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        xandert.93\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      <div className=\"loader\">\r\n        <div className=\"loading-circle\"></div>\r\n        <div className=\"loading-circle\"></div>\r\n        <div className=\"loading-circle\"></div>\r\n      </div>\r\n      <p className=\"loading-text\">Loading. Please wait...</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","const colors = [\r\n  '#00138f',\r\n  '#c90000',\r\n  '#994f00',\r\n  '#c29800',\r\n  '#3d7300',\r\n  '#00c735',\r\n  '#02d1b5',\r\n  '#0083cf',\r\n  '#472E32',\r\n  '#bf00c9',\r\n  '#7900c9',\r\n  '#2800c9',\r\n];\r\n\r\nexport default colors;\r\n","import React, { Component } from 'react';\nimport { QuoteProvider } from './contexts/quoteContext';\nimport './App.css';\nimport Header from './components/Header';\nimport QuoteCard from './components/QuoteCard';\nimport FetchError from './components/FetchError';\nimport Footer from './components/Footer';\nimport Loader from './components/Loader';\nimport colors from './data/colors';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      quotes: [],\n      errMsg: '',\n      quoteObj: '',\n      quoteChanged: false,\n      randomColor: 'black',\n    };\n\n    this.getQuotes = this.getQuotes.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuotes();\n  }\n\n  getQuotes() {\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      fetch(\n        'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n      )\n        .then((res) => res.json())\n        .then((data) =>\n          this.setState(\n            { isLoading: false, quotes: data.quotes },\n            () =>\n              (document.body.onkeyup = (e) =>\n                ['Space', 'Enter'].includes(e.code) && this.generateQuote())\n          )\n        )\n        .catch((err) =>\n          this.setState({ isLoading: false, errMsg: err.message })\n        );\n    }, 2500);\n  }\n\n  generateQuote = (e) => {\n    this.setState({ quoteChanged: true });\n    let quoteIdx = Math.ceil(Math.random() * 101);\n    setTimeout(\n      () => {\n        this.setState({\n          quoteObj: this.state.quotes[quoteIdx],\n          quoteChanged: false,\n          randomColor: colors[Math.ceil(Math.random() * 11)],\n        });\n      },\n      !this.state.quoteObj ? 0 : 1100\n    );\n  };\n\n  render() {\n    let {\n      state: { randomColor, isLoading, quoteObj, errMsg },\n      generateQuote,\n    } = this;\n    return (\n      <div className=\"app\" style={{ background: randomColor }}>\n        <QuoteProvider value={{ ...this.state, generateQuote }}>\n          {isLoading ? <Loader /> : errMsg ? <FetchError /> : <Header />}\n          {quoteObj && (\n            <>\n              <QuoteCard />\n              <Footer />\n            </>\n          )}\n        </QuoteProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}